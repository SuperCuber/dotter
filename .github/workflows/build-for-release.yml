name: Build assets for a Release

on:
  release:
    types: [published]

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            exe_suffix: ""
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            exe_suffix: ".exe"
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: "cargo build --release --locked --verbose --target ${{ matrix.target }}"
      - name: Upload asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: target/${{ matrix.target }}/release/dotter${{ matrix.exe_suffix }}
          asset_name: dotter${{ matrix.exe_suffix }}
          asset_content_type: application/octet-stream
          upload_url: ${{ github.event.release.upload_url }}
  build-completions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Generate Completions
        run: |
          cargo build

          SHELLS=""

          mkdir completions
          for shell in SHELLS; do
              cargo run -- gen-completions --shell $shell --to completions

          zip -r completions.zip completions
      - name: Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: completions.zip
  cargo-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: cargo login ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      - run: cargo publish
