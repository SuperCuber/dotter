name: Build assets for a Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-artifact:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release --locked --verbose --target ${{ matrix.target }}
      - name: Pack for Linux
        if: matrix.os == 'ubuntu-latest'
        env:
          RELEASE_NAME: dotter-${{ matrix.target }}
        run: |
          mkdir $RELEASE_NAME
          cp -r target/${{ matrix.target }}/release/dotter -t $RELEASE_NAME
          cp -r completions -t $RELEASE_NAME
          tar -zcvf $RELEASE_NAME.${{ matrix.archive }} -C $RELEASE_NAME .
      - name: Pack for Windows
        if: matrix.os == 'windows-latest'
        env:
          RELEASE_NAME: dotter-${{ matrix.target }}
        run: |
          New-Item -ItemType Directory -Path ${env:RELEASE_NAME}
          Copy-Item -Path "target\${{ matrix.target }}\release\dotter.exe" -Destination ${env:RELEASE_NAME}
          Copy-Item -Path "completions" -Destination ${env:RELEASE_NAME} -Recurse
          Compress-Archive -Path "${env:RELEASE_NAME}\*" -DestinationPath "${env:RELEASE_NAME}.${{ matrix.archive }}" -Force
      - name: Upload asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dotter-${{ matrix.target }}.${{ matrix.archive }}
